import{_ as t,c as e,o as a,a6 as i}from"./chunks/framework.CGZlG5xz.js";const m=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md","lastUpdated":1709797526000}'),l={name:"guide/index.md"},r=i('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p>低代码开发平台(LCDP)：开发者不需要传统的手写代码的方式进行编程，采用图形化拖拽的方式，配置参数完成开发工作。</p><p>通常情况下完善的低代码平台一般具备以下的几个能力：</p><ul><li>可视化页面搭建，通过简单的拖拽即可完成应用页面开发，对前端技能没有要求或不需要特别专业的了解；</li><li>可视化模型设计，与业务相关的数据存储变得更容易理解，甚至大多数简单场景可以做到表单即模型，模型字段的类型更加业务化；</li><li>可视化流程设计，不管是业务流程还是审批流程，都可以通过简单的点线连接来进行配置；</li><li>可视化报表及数据分析，BI 数据分析能力成为标配，随时随地通过拖拽选择来定义自定义分析报表；</li><li>可视化服务与数据开放、集成，具备与其他系统互联互通的配置；</li><li>权限、角色设置标准化和业务化，通过策略规则配置来将数据、操作的权限进行精细化管理；</li><li>无需关心服务器、计算设施设备、网络、数据库等复杂技术概念和底层运维，具备安全、性能的统一解决方案，开发者只需要专注于业务本身；</li></ul><h2 id="方案对比" tabindex="-1">方案对比 <a class="header-anchor" href="#方案对比" aria-label="Permalink to &quot;方案对比&quot;">​</a></h2><table><thead><tr><th>项目名称</th><th>调研情况</th></tr></thead><tbody><tr><td>阿里低代码引擎</td><td>优点React 技术栈，目前团队主要为 React 技术栈具备完整的物料规范低代码引擎标准实现，有一个完整开箱即用的设计器，标准化的渲染器，标准的插件设计模式Github Star 10.9K已经有成熟的“宜搭”商业化产品缺点没有现成的服务端实现协议涉及内容较多文档不是很全缺少现成的表单联动方案</td></tr><tr><td>百度爱速搭</td><td>优点低代码平台全生命周期管理流程，开箱即用具备服务端程序，具备流程引擎能够支持审批流业务，支持数据管理支持小程序、快应用等移动应用的搭建支持数据联动配置，现成的表单场景方案商业化产品文档较为健全缺点Vue2 技术栈（团队使用较少）服务端不开源，如果遇到需要定制的需求，无法进行开发</td></tr><tr><td>腾讯Tmagic</td><td>优点：可视化设计器，支持自定义组件、插件、扩展编辑器能力支持多种技术栈开发自己的业务组件，比如vue2、vue3、react支持现成的表单联动方案。缺点：没有现成的服务端实现，大部分组件基于 TMagic UI ，现有团队可复用的组件较少</td></tr><tr><td>。 H5-Dooring</td><td>优点：React 技术栈，能够做到开箱即用，适合开发各类H5落地页，针对H5场景做了定向的优化，支持动态加载内核等。缺点：商业化产品，公司内部使用存在风险，所有内容均是针对H5场景进行设计的，扩展能力较弱</td></tr></tbody></table><h2 id="核心功能" tabindex="-1">核心功能 <a class="header-anchor" href="#核心功能" aria-label="Permalink to &quot;核心功能&quot;">​</a></h2><ol><li><p>业务建模：基于元数据模型驱动开发的思想，提供灵活、稳定的元数据模型建模与管理，通过数据实体、属性、关系等元数据配置响应业务需求变化，提供了在线的数据库实体建模和E-R建模功能，支持单表、一对一、一对多关系。</p></li><li><p>表单建模：在线可视化化表单设计器可快速建符合业务的表单，用于数据采集和流程审批，在线预览，所见即所得。</p></li><li><p>页面建模：提供可视化配置功能，支持单表、主子表、树等多种模板，基于组件化组合思想，可构建复杂页面功能，并可配置页面查询框、操作按钮等功能。</p></li><li><p>流程建模：BPMN2.0规范，可视化拖拉拽流程设计；会签、加签、跳转、退回、撤销等多种流程操作，配置即用；用户、部门、角色、岗位、 关系等多种选人方式，符合中国特色组织选人需求。</p></li><li><p>报表建模：报表设计器是一款在线可视化报表建模工具，提供了汇总表、明细表、柱形图、条形图、饼图、折线图、面积图、雷达图、指标图等多种种常用图表，可以组合及联动使用。设计器采用拖拽操作的风格，简单易用，能够实时展示配置效果，一目了然。</p></li><li><p>门户建模：拖拉拽方式设计首页，无需编码；多种布局风格，可自由布局；支持多角色门户，不同角色不同首页；在线预览，所见即所得。</p></li><li><p>大屏建模：无需写代码，在线可视化设计大屏，支持图表、表格、媒体等20+常用组件，支持静态数据、HTTP、SQL等多种获取数据方式。</p></li><li><p>移动建模：可以在线设计流程和表单，开发应用，无需手写代码，可自动生成移动端界面，极大提升了移动应用开发效率。</p></li><li><p>数据服务化：无需开发Controller、Service、Dao、Mapper、XML、VO等Java对象，一键即可生成HTTP API接口，跟Swagger无缝结合，生成标准RESTful接口文档。</p></li></ol>',8),d=[r];function o(p,n,c,h,s,_){return a(),e("div",null,d)}const T=t(l,[["render",o]]);export{m as __pageData,T as default};
