import{_ as e,c as t,o as a,a6 as o,aJ as i}from"./chunks/framework.8kXQXmdI.js";const f=JSON.parse('{"title":"模型驱动","description":"","frontmatter":{},"headers":[],"relativePath":"guide/model-driven.md","filePath":"guide/model-driven.md","lastUpdated":1709799299000}'),l={name:"guide/model-driven.md"},r=o('<h1 id="模型驱动" tabindex="-1">模型驱动 <a class="header-anchor" href="#模型驱动" aria-label="Permalink to &quot;模型驱动&quot;">​</a></h1><p>模型驱动是一种软件开发方法，利用一系列模型的设计、映射、引用、转换，来驱动软件的需求、设计、实现的软件工程过程。</p><p><img src="'+i+'" alt=""></p><p>以上是低代码平台表单引擎原理图，主要包括模型建模工具（表单设计器）、模型解析引擎、模型实例化引擎、界面渲染引擎、模型库、实例库几部分构成，实际产品开发中部分引擎可以合并为一个组件。</p><p>以下通过一个业务场景举例说明其逻辑，假设用户要设计一个请假申请单。</p><p>第一步：首先要打开表单建模工具，通过拖拉拽方式设计表单，格式是Json或xml均可，设计完成后，提交保存表单模型，调用后端模型解析引擎，模型解析引擎会解析json或xml，生成表单模型元数据，插入到模型数据库中，此时就完成了表单设计工作。</p><p>第二步：表单发布后，用户打开URL链接，请求表单界面渲染引擎，界面渲染引擎通过模型解析引擎得到模型定义对象，进而完成页面动态渲染。</p><p>第三步：用户录入数据，点击提交，请求模型实例化引擎，并把数据插入到数据库业务表中。</p><p>那么基于模型驱动开发的原理有什么好处呢？</p><ol><li>快速设计原型系统，项目经理在需求调研时，直接设计高保真原型系统；</li><li>快速开发业务应用，通过拖拉拽方式比硬编码方式大幅提升开发效率；</li><li>响应需求高动态变化，比如：客户调整样式、加字段、改流程等经常发生；</li><li>模型积累和重用，模型可以导入导出，模型可以分享，相比代码更具备复用性；</li></ol>',10),p=[r];function s(_,d,n,c,m,h){return a(),t("div",null,p)}const v=e(l,[["render",s]]);export{f as __pageData,v as default};
