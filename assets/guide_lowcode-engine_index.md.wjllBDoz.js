import{_ as s,c as a,o as i,V as e,al as n,am as l,an as t,ao as p}from"./chunks/framework.G8kpDcrJ.js";const y=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/lowcode-engine/index.md","filePath":"guide/lowcode-engine/index.md","lastUpdated":1706692483000}'),r={name:"guide/lowcode-engine/index.md"},h=e('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p>通过查看低代码引擎lowcode-engine的各个功能模块引用关系，大概可以将4大功能模块与代码模块的对应关系梳理如下：</p><p><img src="'+n+`" alt=""></p><p>在lowcode-engine的根目录下，有一个modules文件夹，这里面有低代码引擎的两个模块，分别是入料模块（modules/material-parser）和出码模块（modules/code-generator）。</p><p>而在lowcode-engine/packages目录下，存放着低代码引擎的编排模块（packages/engine）和渲染模块（packages/renderer-core）。</p><p>注意到在lowcode-engine/packages目录下，有一个名称为ignitor的文件夹，存放着一个名称为@alilc/lowcode-ignitor的模块，这个模块的package.json中的说明是“点火器，用于启动低代码引擎项目”。</p><h2 id="环境搭建" tabindex="-1">环境搭建 <a class="header-anchor" href="#环境搭建" aria-label="Permalink to &quot;环境搭建&quot;">​</a></h2><p>我们要阅读调试lowcode-engine引擎的源码，我们首先需要clone源代码：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone git@github.com:alibaba/lowcode-engine.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lowcode-engine</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>安装依赖并构建</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run setup</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后再调用</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run start</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这时候会启动5555端口服务，可以访问引擎打包后的js文件。</p><p>由于lowcode-engine引擎仅支持 cdn 方式引入，npm 包用于提供 typings 等代码提示能力。</p><p>所以我们调试的时候只需要将源码lowcode-engine 启动后，提供了几个 umd 文件代理到使用工程中即可。这里推荐 <a href="https://chrome.google.com/webstore/detail/xswitch/idkjhjggpffolpidfkikidcokdkdaogg?hl=en-US" target="_blank" rel="noreferrer">XSwitch</a>。</p><p>本地开发代理规则如下：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;proxy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;https://uipaas-assets.com/prod/npm/@alilc/lowcode-engine/(.*)/dist/js/engine-core.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;http://localhost:5555/js/AliLowCodeEngine.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;https://uipaas-assets.com/prod/npm/@alilc/lowcode-engine/(.*)/dist/css/engine-core.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;http://localhost:5555/css/AliLowCodeEngine.css&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;https?://uipaas-assets.com/prod/npm/@alilc/lowcode-engine/(.*)/dist/js/react-simulator-renderer.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;http://localhost:5555/js/ReactSimulatorRenderer.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;https?://uipaas-assets.com/prod/npm/@alilc/lowcode-engine/(.*)/dist/css/react-simulator-renderer.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;http://localhost:5555/css/ReactSimulatorRenderer.css&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>或者直接替换html中引入的js和js即可。</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 低代码引擎的页面框架样式 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- &lt;link rel=&quot;stylesheet&quot; href=&quot;https://uipaas-assets.com/prod/npm/@alilc/lowcode-engine/1.1.4/dist/css/engine-core.css&quot; /&gt; --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stylesheet&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:5555/css/AliLowCodeEngine.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 低代码引擎的主包 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- &lt;script crossorigin=&quot;anonymous&quot; src=&quot;https://uipaas-assets.com/prod/npm/@alilc/lowcode-engine/1.1.4/dist/js/engine-core.js&quot;&gt;&lt;/script&gt; --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> crossorigin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;anonymous&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:5555/js/AliLowCodeEngine.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="核心原理" tabindex="-1">核心原理 <a class="header-anchor" href="#核心原理" aria-label="Permalink to &quot;核心原理&quot;">​</a></h2><p>阿里低代码引擎的核心是协议，这份协议是经过打磨的，它是现代前端编程思想的一个语义化表达，现代前端编程思想的核心是组件，因此协议的主体内容是组件树；有状态的容器组件内部有 State 到 UI 视图再通过 Actions 更新 State 这样一个 MVVM 的循环，其中 UI 部分是视图层面的组件，可以通过可视化的画布和属性设置器进行编辑，这是可视化搭建的核心。除此之外，Actions 可以以代码片段的形式来编辑和存储，数据源可以拆解为域名、路径、请求头、参数、前置后置函数来编辑和存储。通过编辑器编辑产出具备现代前端开发要素的协议，基于解释器通过React/Vue等进行执行。这部分就是阿里低代码引擎的核心原理。</p><p><img src="`+l+'" alt=""></p><h2 id="基础设施" tabindex="-1">基础设施 <a class="header-anchor" href="#基础设施" aria-label="Permalink to &quot;基础设施&quot;">​</a></h2><p>低代码平台的基础设施是物料平台，物料平台需要能够与低代码平台进行适配，为运行时提供物料代码，为编辑态提供物料属性描述以便生成设置表单，这个过程需要两个协议，资产包协议和物料描述协议，下图中心的 assets.json 就是符合这两个协议的一个物料资产数据，下图体现了物料资产在整个低代码研发过程中的核心位置。</p><p><img src="'+t+'" alt=""></p><h2 id="源码结构" tabindex="-1">源码结构 <a class="header-anchor" href="#源码结构" aria-label="Permalink to &quot;源码结构&quot;">​</a></h2><p>我们从Github中拉取lowcode-engine源码如下：</p><p><img src="'+p+'" alt=""></p><ul><li>packages/designer：设计器即中间画布区域</li><li>packages/editor-core：编辑器核心</li><li>packages/engine：低代码引擎主入口模块</li><li>pakcages/ignitor：启动器</li><li>packages/plugin-designer：设计器插件</li><li>packages/plugin-outline-pane：大纲树插件</li><li>packages/react-renderer：react渲染区</li><li>packages/react-simulator-renderer：react模拟器</li><li>packages/renderer-core：react渲染核心</li><li>packages/shell</li><li>packages/types</li><li>packages/utils</li><li>packages/workspace</li></ul><h2 id="生态" tabindex="-1">生态 <a class="header-anchor" href="#生态" aria-label="Permalink to &quot;生态&quot;">​</a></h2><ul><li>低代码引擎：<a href="https://github.com/alibaba/lowcode-engine" target="_blank" rel="noreferrer">https://github.com/alibaba/lowcode-engine</a></li><li>插件包：<a href="https://github.com/alibaba/lowcode-plugins" target="_blank" rel="noreferrer">https://github.com/alibaba/lowcode-plugins</a></li><li>工具链包：<a href="https://github.com/alibaba/lowcode-tools" target="_blank" rel="noreferrer">https://github.com/alibaba/lowcode-tools</a></li><li>引擎 demo：<a href="https://github.com/alibaba/lowcode-demo" target="_blank" rel="noreferrer">https://github.com/alibaba/lowcode-demo</a></li><li>数据源相关：<a href="https://github.com/alibaba/lowcode-datasource" target="_blank" rel="noreferrer">https://github.com/alibaba/lowcode-datasource</a></li><li>出码 demo：<a href="https://github.com/alibaba/lowcode-code-generator-demo" target="_blank" rel="noreferrer">https://github.com/alibaba/lowcode-code-generator-demo</a></li><li>引擎扩展包：<a href="https://github.com/alibaba/lowcode-engine-ext" target="_blank" rel="noreferrer">https://github.com/alibaba/lowcode-engine-ext</a></li><li>物料描述包：<a href="https://github.com/alibaba/lowcode-materials" target="_blank" rel="noreferrer">https://github.com/alibaba/lowcode-materials</a></li></ul>',32),o=[h];function c(d,k,g,u,b,m){return i(),a("div",null,o)}const F=s(r,[["render",c]]);export{y as __pageData,F as default};
